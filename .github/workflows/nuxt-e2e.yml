name: Nuxt E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend-nuxt-poc/**'
      - '.github/workflows/nuxt-e2e.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend-nuxt-poc/**'
      - '.github/workflows/nuxt-e2e.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  BUN_VERSION: '1.2.16'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit, 'Mobile Chrome', 'Mobile Safari']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            frontend-nuxt-poc/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}-playwright
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}-
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install --with-deps ${{ matrix.project == 'Mobile Chrome' && 'chromium' || matrix.project == 'Mobile Safari' && 'webkit' || matrix.project }}

      - name: Build application
        working-directory: frontend-nuxt-poc
        run: bun run build

      - name: Run E2E tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test --project="${{ matrix.project }}" --reporter=html,json,junit
        env:
          CI: true
          BASE_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.project }}-${{ github.run_id }}
          path: |
            frontend-nuxt-poc/test-results/
            frontend-nuxt-poc/playwright-report/
          retention-days: 7

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.project }}-${{ github.run_id }}
          path: frontend-nuxt-poc/screenshots/
          retention-days: 7

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const resultsPath = 'frontend-nuxt-poc/test-results/results.json';
              if (fs.existsSync(resultsPath)) {
                const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
                const { stats } = results;
                
                const success = stats.expected || 0;
                const failed = stats.unexpected || 0;
                const skipped = stats.skipped || 0;
                const total = success + failed + skipped;
                
                const statusIcon = failed > 0 ? '❌' : '✅';
                const body = `
            ## ${statusIcon} E2E Test Results - ${{ matrix.project }}
            
            - **Passed:** ${success}
            - **Failed:** ${failed}
            - **Skipped:** ${skipped}
            - **Total:** ${total}
            
            ${failed > 0 ? '⚠️ Some tests failed. Check the test artifacts for details.' : '🎉 All tests passed!'}
            `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: body
                });
              }
            } catch (error) {
              console.log('Could not post test results:', error.message);
            }

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            frontend-nuxt-poc/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}-playwright-visual
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}-
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install --with-deps chromium

      - name: Build application
        working-directory: frontend-nuxt-poc
        run: bun run build

      - name: Run visual regression tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test e2e/tests/visual.spec.ts --project=chromium --reporter=html,json
        env:
          CI: true
          BASE_URL: http://localhost:3000

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-regression-results-${{ github.run_id }}
          path: |
            frontend-nuxt-poc/test-results/
            frontend-nuxt-poc/playwright-report/
            frontend-nuxt-poc/e2e/tests/visual.spec.ts-snapshots/
          retention-days: 14

      - name: Update visual baselines
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
        working-directory: frontend-nuxt-poc
        run: bunx playwright test e2e/tests/visual.spec.ts --project=chromium --update-snapshots

  lint-and-typecheck:
    name: Lint and TypeCheck
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: frontend-nuxt-poc/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Run linting
        working-directory: frontend-nuxt-poc
        run: bun run lint

      - name: Run type checking
        working-directory: frontend-nuxt-poc
        run: bun run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: frontend-nuxt-poc/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Run unit tests
        working-directory: frontend-nuxt-poc
        run: bun run test:run --coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-${{ github.run_id }}
          path: frontend-nuxt-poc/coverage/
          retention-days: 7

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, visual-regression, lint-and-typecheck, unit-tests]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "## 📊 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Visual Regression | ${{ needs.visual-regression.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & TypeCheck | ${{ needs.lint-and-typecheck.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.e2e-tests.result }}" == "success" && "${{ needs.visual-regression.result }}" == "success" && "${{ needs.lint-and-typecheck.result }}" == "success" && "${{ needs.unit-tests.result }}" == "success" ]]; then
            echo "🎉 **All tests passed!** The Nuxt.js POC is ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some tests failed.** Please review the failed jobs and fix any issues." >> $GITHUB_STEP_SUMMARY
          fi