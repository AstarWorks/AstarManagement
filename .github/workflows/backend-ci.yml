name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  workflow_dispatch:

env:
  JAVA_VERSION: '21'
  POSTGRES_VERSION: '15'
  REDIS_VERSION: '7'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:${{ env.POSTGRES_VERSION }}
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: astermanagement_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:${{ env.REDIS_VERSION }}-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            backend/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Verify database connectivity
        run: |
          pg_isready -h localhost -p 5432 -U postgres
          redis-cli -h localhost -p 6379 ping

      - name: Run backend tests with coverage
        working-directory: backend
        run: |
          ./gradlew clean test jacocoTestReport --info
        env:
          SPRING_PROFILES_ACTIVE: test
          DATABASE_URL: jdbc:postgresql://localhost:5432/astermanagement_test
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: testpassword
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Verify code coverage threshold
        working-directory: backend
        run: |
          ./gradlew jacocoTestCoverageVerification

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results-${{ github.run_id }}
          path: |
            backend/build/test-results/test/
            backend/build/reports/tests/test/
          retention-days: 7

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-coverage-report-${{ github.run_id }}
          path: |
            backend/build/reports/jacoco/test/
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: backend/build/reports/jacoco/test/jacocoTestReport.xml
          flags: backend
          name: Backend Coverage
          fail_ci_if_error: false

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            backend/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Checkstyle
        working-directory: backend
        run: |
          ./gradlew checkstyleMain checkstyleTest

      - name: Run SpotBugs
        working-directory: backend
        run: |
          ./gradlew spotbugsMain spotbugsTest
        continue-on-error: true

      - name: Upload code quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-code-quality-${{ github.run_id }}
          path: |
            backend/build/reports/checkstyle/
            backend/build/reports/spotbugs/
          retention-days: 7

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            backend/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run OWASP Dependency Check
        working-directory: backend
        run: |
          ./gradlew dependencyCheckAnalyze
        continue-on-error: true

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-dependency-check-${{ github.run_id }}
          path: backend/build/reports/dependency-check-report.html
          retention-days: 14

      - name: Security scan summary
        if: always()
        run: |
          echo "## 🔐 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **OWASP Dependency Check**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Report**: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 Review the dependency check report for any critical vulnerabilities." >> $GITHUB_STEP_SUMMARY

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            backend/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build application
        working-directory: backend
        run: |
          ./gradlew build -x test --info

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-build-artifacts-${{ github.run_id }}
          path: |
            backend/build/libs/
          retention-days: 7

  summary:
    name: Backend CI Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, code-quality, security-scan, build-verification]
    if: always()

    steps:
      - name: Backend CI Summary
        run: |
          echo "## 🏗️ Backend CI Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Tests | ${{ needs.backend-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.code-quality.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Verification | ${{ needs.build-verification.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.backend-tests.result }}" == "success" && "${{ needs.code-quality.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" && "${{ needs.build-verification.result }}" == "success" ]]; then
            echo "🎉 **All backend checks passed!** The Spring Boot application is ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some backend checks failed.** Please review the failed jobs and fix any issues before merging." >> $GITHUB_STEP_SUMMARY
          fi