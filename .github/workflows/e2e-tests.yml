name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    paths:
      - 'frontend-nuxt-poc/**'
      - '.github/workflows/e2e-tests.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
      fail-fast: false

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: Astarmanagement_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.16

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bun
            frontend-nuxt-poc/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('frontend-nuxt-poc/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install frontend dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install ${{ matrix.browser }} --with-deps

      - name: Setup test environment
        working-directory: frontend-nuxt-poc
        run: |
          echo "DATABASE_URL=postgresql://postgres:testpassword@localhost:5432/Astarmanagement_test" >> .env.test
          echo "NODE_ENV=test" >> .env.test
          echo "BASE_URL=http://localhost:3000" >> .env.test

      - name: Start backend (if needed)
        run: |
          # Add backend startup commands here when backend tests are integrated
          echo "Backend startup would go here"

      - name: Build frontend
        working-directory: frontend-nuxt-poc
        run: bun run build

      - name: Run E2E tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test --project=${{ matrix.browser }}
        env:
          CI: true
          BASE_URL: http://localhost:3000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: frontend-nuxt-poc/playwright-report/
          retention-days: 30

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts-${{ matrix.browser }}
          path: |
            frontend-nuxt-poc/test-results/
          retention-days: 30

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.16

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install chromium --with-deps

      - name: Run visual tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test e2e/visual/ --project=chromium
        env:
          CI: true

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-results
          path: |
            frontend-nuxt-poc/test-results/
            frontend-nuxt-poc/playwright-report/
          retention-days: 30

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.16

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install chromium --with-deps

      - name: Run performance tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test e2e/performance/ --project=chromium
        env:
          CI: true

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-test-results
          path: frontend-nuxt-poc/test-results/performance/
          retention-days: 30

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.16

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: |
          bun install --frozen-lockfile
          bun add -d @axe-core/playwright

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install chromium --with-deps

      - name: Run accessibility tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test e2e/accessibility/ --project=chromium
        env:
          CI: true

      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-results
          path: frontend-nuxt-poc/test-results/accessibility/
          retention-days: 30

  mobile-tests:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        device: ['Mobile Chrome', 'Mobile Safari']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.16

      - name: Install dependencies
        working-directory: frontend-nuxt-poc
        run: bun install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: frontend-nuxt-poc
        run: bunx playwright install --with-deps

      - name: Run mobile tests
        working-directory: frontend-nuxt-poc
        run: bunx playwright test --project="${{ matrix.device }}"
        env:
          CI: true

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-test-results-${{ matrix.device }}
          path: |
            frontend-nuxt-poc/test-results/
            frontend-nuxt-poc/playwright-report/
          retention-days: 30

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, visual-regression, performance-tests, accessibility-tests, mobile-tests]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create test summary
        run: |
          echo "# E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Status" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Tests: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile Tests: ${{ needs.mobile-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Test artifacts are available for download above." >> $GITHUB_STEP_SUMMARY