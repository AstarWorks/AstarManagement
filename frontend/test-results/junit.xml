<testsuites id="" name="" tests="1040" failures="0" skipped="1040" errors="0" time="0.24158099999999996">
<testsuite name="accessibility/accessibility-audit.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="27" failures="0" skipped="27" time="0" errors="0">
<testcase name="Accessibility Audit › Authentication Pages › login page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › 2FA setup page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › password reset page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › main dashboard should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › navigation should be keyboard accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › sidebar navigation should have proper ARIA labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › create case form should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › form validation should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › complex form fields should have proper labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban board should be keyboard navigable" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › drag and drop should have keyboard alternatives" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban columns should have proper headings" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document list should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › file upload should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document viewer should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › matter list table should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › sortable columns should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › pagination should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › modal dialogs should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › dropdown menus should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › tooltips should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should meet color contrast requirements" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should be usable without color alone" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should support high contrast mode" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper heading hierarchy" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper landmark roles" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should announce dynamic content changes" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/auth-flows.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Authentication Flows › Login Process › should login successfully with valid lawyer credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid clerk credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid client credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should reject invalid credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation errors for empty fields" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation error for invalid email format" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should logout successfully and redirect to login page" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should clear session and require re-authentication" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should maintain session across page refreshes" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle session timeout gracefully" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle concurrent sessions correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce lawyer permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce clerk permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce client permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should enforce password complexity requirements" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should require password confirmation match" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Mobile Authentication › should handle mobile login correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/two-factor-auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should guide user through 2FA setup on first login" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should verify 2FA setup with valid code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should reject invalid verification codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should allow downloading backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should require 2FA after username/password" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should login successfully with valid 2FA code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should reject invalid 2FA codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should handle 2FA code expiration" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should rate limit after multiple failed attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should allow login with backup code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should invalidate backup code after use" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should warn when few backup codes remain" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should allow disabling 2FA" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should regenerate backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should reset 2FA after password change" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should prevent 2FA bypass attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should timeout 2FA session" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should enforce 2FA for sensitive operations" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should lock account after repeated 2FA failures" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should show helpful setup instructions" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should provide accessibility for QR code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should remember trusted devices" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="case-management/case-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Case Creation › should create a new case with complete information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should validate required fields when creating a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should handle API errors during case creation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should display case list with proper information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should open case details when clicking on a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should filter cases by status" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should search cases by title and client" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case information successfully" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case status through workflow actions" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should handle optimistic updates with rollback on failure" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should delete case with confirmation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should cancel deletion when user chooses not to proceed" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple cases and update status in bulk" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should handle partial failures in bulk operations" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cases/case-management-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Create Operations › should create a new matter successfully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should validate required fields on create" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should create matter with file upload" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should display matter list with proper data" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should open matter detail view" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should filter matters by status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should search matters by title" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter details" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter status via dropdown" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should assign matter to different lawyer" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should add note to matter" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should delete matter with confirmation" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should cancel matter deletion" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should prevent deletion of active matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk update status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk assign matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle server errors gracefully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should validate matter title length" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle duplicate matter titles" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › clerk should have limited access" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › client should only see assigned matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="forms/form-validation.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Form Validation › should validate matter creation form" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Form Validation › should validate email formats in user forms" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="kanban/kanban-workflow.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display all kanban columns with proper headers" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display matter cards with complete information" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should show column counts and statistics" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should drag matter from INTAKE to IN_PROGRESS successfully" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag and drop with position reordering" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should validate status transition rules during drag" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag cancellation with escape key" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should show drag indicators when another user is dragging" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should handle concurrent drag conflicts" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should handle large number of matters efficiently" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should work correctly on mobile devices" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should filter matters by priority" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should search matters across all columns" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should support keyboard navigation for drag and drop" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should have proper ARIA labels and roles" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/mobile-responsive.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Responsive Design › should display mobile navigation correctly on iPhone" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle mobile form interactions" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support touch interactions on documents" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle responsive breakpoints" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support swipe gestures on kanban cards" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support long press for context menus" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should load quickly on mobile networks" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should provide smooth animations" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle orientation changes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile screen readers" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should have appropriate touch target sizes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support offline document access" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile notifications" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile-optimized search" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/web-vitals.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Core Web Vitals Performance › dashboard should meet Core Web Vitals thresholds" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › cases list should load performantly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › kanban board should render efficiently" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › document viewer should load quickly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should track resource loading performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure JavaScript bundle performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should monitor memory usage" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure API response times" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should maintain consistent performance across browser sessions" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should perform well under load simulation" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="real-time/collaboration.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Real-time Collaboration › should show real-time updates when another user makes changes" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Real-time Collaboration › should handle WebSocket connection states" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="responsive/mobile-tests.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Mobile Responsive Design › should adapt layout for mobile devices" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle touch interactions on mobile" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Authentication Flow › should login successfully with valid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show error with invalid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show validation errors for empty fields" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should logout successfully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should redirect to login when accessing protected route" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should persist login with remember me" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle session expiry gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should work with different user roles" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle network errors gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should navigate to forgot password" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/kanban.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Kanban Board › should display kanban board with columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should display matters in correct columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should drag matter to another column" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should prevent invalid status transitions" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should search for matters" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should clear search" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should filter by priority" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should open matter details on click" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should add new matter" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle empty board state" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should work in mobile view" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should show matter details in card" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle real-time updates" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/matter-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Matter CRUD Operations › should create new matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should validate required fields" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should update existing matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should delete matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle duplicate case numbers" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should auto-save draft" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle status transitions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle permissions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should export matter data" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should show audit trail" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/mobile.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Experience › should show mobile navigation menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should navigate using mobile menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized kanban board" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should swipe between kanban columns" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle touch gestures on matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized forms" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle virtual keyboard properly" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly search" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle offline mode" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should optimize images for mobile" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle orientation changes" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-specific UI elements" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle pull-to-refresh" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/visual.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Visual Regression Tests › Authentication Pages › login page appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Authentication Pages › login page responsive design" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board layout" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board empty state" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board with multiple matters" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board mobile responsiveness" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter detail page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter create form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter edit form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › navigation sidebar" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › header and breadcrumbs" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Dark Mode Theme › dark mode appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › network error page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › 404 page not found" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility/accessibility-audit.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="27" failures="0" skipped="27" time="0" errors="0">
<testcase name="Accessibility Audit › Authentication Pages › login page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › 2FA setup page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › password reset page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › main dashboard should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › navigation should be keyboard accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › sidebar navigation should have proper ARIA labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › create case form should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › form validation should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › complex form fields should have proper labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban board should be keyboard navigable" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › drag and drop should have keyboard alternatives" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban columns should have proper headings" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document list should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › file upload should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document viewer should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › matter list table should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › sortable columns should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › pagination should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › modal dialogs should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › dropdown menus should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › tooltips should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should meet color contrast requirements" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should be usable without color alone" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should support high contrast mode" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper heading hierarchy" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper landmark roles" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should announce dynamic content changes" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/auth-flows.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Authentication Flows › Login Process › should login successfully with valid lawyer credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid clerk credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid client credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should reject invalid credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation errors for empty fields" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation error for invalid email format" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should logout successfully and redirect to login page" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should clear session and require re-authentication" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should maintain session across page refreshes" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle session timeout gracefully" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle concurrent sessions correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce lawyer permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce clerk permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce client permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should enforce password complexity requirements" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should require password confirmation match" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Mobile Authentication › should handle mobile login correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/two-factor-auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should guide user through 2FA setup on first login" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should verify 2FA setup with valid code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should reject invalid verification codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should allow downloading backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should require 2FA after username/password" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should login successfully with valid 2FA code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should reject invalid 2FA codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should handle 2FA code expiration" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should rate limit after multiple failed attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should allow login with backup code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should invalidate backup code after use" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should warn when few backup codes remain" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should allow disabling 2FA" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should regenerate backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should reset 2FA after password change" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should prevent 2FA bypass attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should timeout 2FA session" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should enforce 2FA for sensitive operations" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should lock account after repeated 2FA failures" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should show helpful setup instructions" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should provide accessibility for QR code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should remember trusted devices" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="case-management/case-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Case Creation › should create a new case with complete information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should validate required fields when creating a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should handle API errors during case creation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should display case list with proper information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should open case details when clicking on a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should filter cases by status" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should search cases by title and client" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case information successfully" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case status through workflow actions" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should handle optimistic updates with rollback on failure" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should delete case with confirmation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should cancel deletion when user chooses not to proceed" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple cases and update status in bulk" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should handle partial failures in bulk operations" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cases/case-management-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Create Operations › should create a new matter successfully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should validate required fields on create" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should create matter with file upload" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should display matter list with proper data" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should open matter detail view" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should filter matters by status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should search matters by title" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter details" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter status via dropdown" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should assign matter to different lawyer" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should add note to matter" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should delete matter with confirmation" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should cancel matter deletion" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should prevent deletion of active matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk update status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk assign matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle server errors gracefully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should validate matter title length" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle duplicate matter titles" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › clerk should have limited access" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › client should only see assigned matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="forms/form-validation.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Form Validation › should validate matter creation form" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Form Validation › should validate email formats in user forms" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="kanban/kanban-workflow.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display all kanban columns with proper headers" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display matter cards with complete information" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should show column counts and statistics" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should drag matter from INTAKE to IN_PROGRESS successfully" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag and drop with position reordering" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should validate status transition rules during drag" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag cancellation with escape key" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should show drag indicators when another user is dragging" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should handle concurrent drag conflicts" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should handle large number of matters efficiently" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should work correctly on mobile devices" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should filter matters by priority" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should search matters across all columns" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should support keyboard navigation for drag and drop" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should have proper ARIA labels and roles" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/mobile-responsive.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Responsive Design › should display mobile navigation correctly on iPhone" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle mobile form interactions" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support touch interactions on documents" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle responsive breakpoints" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support swipe gestures on kanban cards" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support long press for context menus" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should load quickly on mobile networks" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should provide smooth animations" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle orientation changes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile screen readers" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should have appropriate touch target sizes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support offline document access" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile notifications" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile-optimized search" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/web-vitals.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Core Web Vitals Performance › dashboard should meet Core Web Vitals thresholds" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › cases list should load performantly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › kanban board should render efficiently" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › document viewer should load quickly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should track resource loading performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure JavaScript bundle performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should monitor memory usage" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure API response times" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should maintain consistent performance across browser sessions" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should perform well under load simulation" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="real-time/collaboration.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Real-time Collaboration › should show real-time updates when another user makes changes" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Real-time Collaboration › should handle WebSocket connection states" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="responsive/mobile-tests.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Mobile Responsive Design › should adapt layout for mobile devices" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle touch interactions on mobile" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Authentication Flow › should login successfully with valid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show error with invalid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show validation errors for empty fields" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should logout successfully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should redirect to login when accessing protected route" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should persist login with remember me" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle session expiry gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should work with different user roles" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle network errors gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should navigate to forgot password" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/kanban.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Kanban Board › should display kanban board with columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should display matters in correct columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should drag matter to another column" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should prevent invalid status transitions" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should search for matters" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should clear search" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should filter by priority" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should open matter details on click" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should add new matter" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle empty board state" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should work in mobile view" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should show matter details in card" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle real-time updates" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/matter-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Matter CRUD Operations › should create new matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should validate required fields" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should update existing matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should delete matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle duplicate case numbers" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should auto-save draft" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle status transitions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle permissions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should export matter data" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should show audit trail" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/mobile.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Experience › should show mobile navigation menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should navigate using mobile menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized kanban board" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should swipe between kanban columns" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle touch gestures on matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized forms" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle virtual keyboard properly" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly search" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle offline mode" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should optimize images for mobile" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle orientation changes" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-specific UI elements" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle pull-to-refresh" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/visual.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="firefox" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Visual Regression Tests › Authentication Pages › login page appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Authentication Pages › login page responsive design" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board layout" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board empty state" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board with multiple matters" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board mobile responsiveness" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter detail page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter create form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter edit form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › navigation sidebar" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › header and breadcrumbs" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Dark Mode Theme › dark mode appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › network error page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › 404 page not found" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility/accessibility-audit.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="27" failures="0" skipped="27" time="0" errors="0">
<testcase name="Accessibility Audit › Authentication Pages › login page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › 2FA setup page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › password reset page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › main dashboard should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › navigation should be keyboard accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › sidebar navigation should have proper ARIA labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › create case form should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › form validation should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › complex form fields should have proper labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban board should be keyboard navigable" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › drag and drop should have keyboard alternatives" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban columns should have proper headings" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document list should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › file upload should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document viewer should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › matter list table should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › sortable columns should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › pagination should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › modal dialogs should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › dropdown menus should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › tooltips should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should meet color contrast requirements" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should be usable without color alone" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should support high contrast mode" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper heading hierarchy" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper landmark roles" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should announce dynamic content changes" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/auth-flows.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Authentication Flows › Login Process › should login successfully with valid lawyer credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid clerk credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid client credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should reject invalid credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation errors for empty fields" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation error for invalid email format" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should logout successfully and redirect to login page" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should clear session and require re-authentication" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should maintain session across page refreshes" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle session timeout gracefully" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle concurrent sessions correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce lawyer permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce clerk permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce client permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should enforce password complexity requirements" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should require password confirmation match" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Mobile Authentication › should handle mobile login correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/two-factor-auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should guide user through 2FA setup on first login" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should verify 2FA setup with valid code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should reject invalid verification codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should allow downloading backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should require 2FA after username/password" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should login successfully with valid 2FA code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should reject invalid 2FA codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should handle 2FA code expiration" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should rate limit after multiple failed attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should allow login with backup code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should invalidate backup code after use" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should warn when few backup codes remain" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should allow disabling 2FA" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should regenerate backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should reset 2FA after password change" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should prevent 2FA bypass attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should timeout 2FA session" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should enforce 2FA for sensitive operations" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should lock account after repeated 2FA failures" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should show helpful setup instructions" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should provide accessibility for QR code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should remember trusted devices" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="case-management/case-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Case Creation › should create a new case with complete information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should validate required fields when creating a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should handle API errors during case creation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should display case list with proper information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should open case details when clicking on a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should filter cases by status" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should search cases by title and client" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case information successfully" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case status through workflow actions" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should handle optimistic updates with rollback on failure" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should delete case with confirmation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should cancel deletion when user chooses not to proceed" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple cases and update status in bulk" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should handle partial failures in bulk operations" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cases/case-management-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Create Operations › should create a new matter successfully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should validate required fields on create" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should create matter with file upload" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should display matter list with proper data" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should open matter detail view" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should filter matters by status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should search matters by title" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter details" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter status via dropdown" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should assign matter to different lawyer" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should add note to matter" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should delete matter with confirmation" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should cancel matter deletion" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should prevent deletion of active matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk update status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk assign matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle server errors gracefully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should validate matter title length" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle duplicate matter titles" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › clerk should have limited access" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › client should only see assigned matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="forms/form-validation.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Form Validation › should validate matter creation form" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Form Validation › should validate email formats in user forms" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="kanban/kanban-workflow.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display all kanban columns with proper headers" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display matter cards with complete information" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should show column counts and statistics" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should drag matter from INTAKE to IN_PROGRESS successfully" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag and drop with position reordering" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should validate status transition rules during drag" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag cancellation with escape key" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should show drag indicators when another user is dragging" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should handle concurrent drag conflicts" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should handle large number of matters efficiently" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should work correctly on mobile devices" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should filter matters by priority" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should search matters across all columns" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should support keyboard navigation for drag and drop" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should have proper ARIA labels and roles" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/mobile-responsive.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Responsive Design › should display mobile navigation correctly on iPhone" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle mobile form interactions" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support touch interactions on documents" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle responsive breakpoints" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support swipe gestures on kanban cards" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support long press for context menus" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should load quickly on mobile networks" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should provide smooth animations" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle orientation changes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile screen readers" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should have appropriate touch target sizes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support offline document access" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile notifications" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile-optimized search" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/web-vitals.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Core Web Vitals Performance › dashboard should meet Core Web Vitals thresholds" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › cases list should load performantly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › kanban board should render efficiently" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › document viewer should load quickly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should track resource loading performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure JavaScript bundle performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should monitor memory usage" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure API response times" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should maintain consistent performance across browser sessions" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should perform well under load simulation" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="real-time/collaboration.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Real-time Collaboration › should show real-time updates when another user makes changes" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Real-time Collaboration › should handle WebSocket connection states" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="responsive/mobile-tests.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Mobile Responsive Design › should adapt layout for mobile devices" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle touch interactions on mobile" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Authentication Flow › should login successfully with valid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show error with invalid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show validation errors for empty fields" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should logout successfully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should redirect to login when accessing protected route" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should persist login with remember me" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle session expiry gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should work with different user roles" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle network errors gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should navigate to forgot password" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/kanban.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Kanban Board › should display kanban board with columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should display matters in correct columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should drag matter to another column" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should prevent invalid status transitions" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should search for matters" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should clear search" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should filter by priority" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should open matter details on click" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should add new matter" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle empty board state" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should work in mobile view" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should show matter details in card" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle real-time updates" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/matter-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Matter CRUD Operations › should create new matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should validate required fields" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should update existing matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should delete matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle duplicate case numbers" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should auto-save draft" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle status transitions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle permissions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should export matter data" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should show audit trail" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/mobile.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Experience › should show mobile navigation menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should navigate using mobile menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized kanban board" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should swipe between kanban columns" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle touch gestures on matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized forms" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle virtual keyboard properly" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly search" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle offline mode" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should optimize images for mobile" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle orientation changes" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-specific UI elements" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle pull-to-refresh" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/visual.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="webkit" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Visual Regression Tests › Authentication Pages › login page appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Authentication Pages › login page responsive design" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board layout" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board empty state" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board with multiple matters" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board mobile responsiveness" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter detail page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter create form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter edit form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › navigation sidebar" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › header and breadcrumbs" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Dark Mode Theme › dark mode appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › network error page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › 404 page not found" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility/accessibility-audit.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="27" failures="0" skipped="27" time="0" errors="0">
<testcase name="Accessibility Audit › Authentication Pages › login page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › 2FA setup page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › password reset page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › main dashboard should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › navigation should be keyboard accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › sidebar navigation should have proper ARIA labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › create case form should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › form validation should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › complex form fields should have proper labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban board should be keyboard navigable" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › drag and drop should have keyboard alternatives" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban columns should have proper headings" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document list should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › file upload should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document viewer should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › matter list table should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › sortable columns should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › pagination should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › modal dialogs should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › dropdown menus should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › tooltips should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should meet color contrast requirements" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should be usable without color alone" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should support high contrast mode" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper heading hierarchy" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper landmark roles" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should announce dynamic content changes" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/auth-flows.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Authentication Flows › Login Process › should login successfully with valid lawyer credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid clerk credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid client credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should reject invalid credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation errors for empty fields" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation error for invalid email format" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should logout successfully and redirect to login page" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should clear session and require re-authentication" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should maintain session across page refreshes" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle session timeout gracefully" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle concurrent sessions correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce lawyer permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce clerk permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce client permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should enforce password complexity requirements" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should require password confirmation match" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Mobile Authentication › should handle mobile login correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/two-factor-auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should guide user through 2FA setup on first login" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should verify 2FA setup with valid code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should reject invalid verification codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should allow downloading backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should require 2FA after username/password" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should login successfully with valid 2FA code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should reject invalid 2FA codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should handle 2FA code expiration" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should rate limit after multiple failed attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should allow login with backup code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should invalidate backup code after use" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should warn when few backup codes remain" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should allow disabling 2FA" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should regenerate backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should reset 2FA after password change" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should prevent 2FA bypass attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should timeout 2FA session" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should enforce 2FA for sensitive operations" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should lock account after repeated 2FA failures" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should show helpful setup instructions" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should provide accessibility for QR code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should remember trusted devices" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="case-management/case-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Case Creation › should create a new case with complete information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should validate required fields when creating a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should handle API errors during case creation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should display case list with proper information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should open case details when clicking on a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should filter cases by status" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should search cases by title and client" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case information successfully" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case status through workflow actions" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should handle optimistic updates with rollback on failure" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should delete case with confirmation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should cancel deletion when user chooses not to proceed" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple cases and update status in bulk" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should handle partial failures in bulk operations" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cases/case-management-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Create Operations › should create a new matter successfully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should validate required fields on create" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should create matter with file upload" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should display matter list with proper data" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should open matter detail view" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should filter matters by status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should search matters by title" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter details" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter status via dropdown" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should assign matter to different lawyer" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should add note to matter" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should delete matter with confirmation" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should cancel matter deletion" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should prevent deletion of active matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk update status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk assign matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle server errors gracefully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should validate matter title length" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle duplicate matter titles" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › clerk should have limited access" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › client should only see assigned matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="forms/form-validation.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Form Validation › should validate matter creation form" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Form Validation › should validate email formats in user forms" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="kanban/kanban-workflow.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display all kanban columns with proper headers" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display matter cards with complete information" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should show column counts and statistics" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should drag matter from INTAKE to IN_PROGRESS successfully" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag and drop with position reordering" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should validate status transition rules during drag" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag cancellation with escape key" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should show drag indicators when another user is dragging" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should handle concurrent drag conflicts" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should handle large number of matters efficiently" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should work correctly on mobile devices" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should filter matters by priority" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should search matters across all columns" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should support keyboard navigation for drag and drop" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should have proper ARIA labels and roles" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/mobile-responsive.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Responsive Design › should display mobile navigation correctly on iPhone" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle mobile form interactions" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support touch interactions on documents" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle responsive breakpoints" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support swipe gestures on kanban cards" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support long press for context menus" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should load quickly on mobile networks" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should provide smooth animations" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle orientation changes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile screen readers" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should have appropriate touch target sizes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support offline document access" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile notifications" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile-optimized search" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/web-vitals.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Core Web Vitals Performance › dashboard should meet Core Web Vitals thresholds" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › cases list should load performantly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › kanban board should render efficiently" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › document viewer should load quickly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should track resource loading performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure JavaScript bundle performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should monitor memory usage" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure API response times" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should maintain consistent performance across browser sessions" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should perform well under load simulation" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="real-time/collaboration.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Real-time Collaboration › should show real-time updates when another user makes changes" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Real-time Collaboration › should handle WebSocket connection states" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="responsive/mobile-tests.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Mobile Responsive Design › should adapt layout for mobile devices" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle touch interactions on mobile" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Authentication Flow › should login successfully with valid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show error with invalid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show validation errors for empty fields" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should logout successfully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should redirect to login when accessing protected route" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should persist login with remember me" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle session expiry gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should work with different user roles" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle network errors gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should navigate to forgot password" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/kanban.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Kanban Board › should display kanban board with columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should display matters in correct columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should drag matter to another column" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should prevent invalid status transitions" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should search for matters" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should clear search" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should filter by priority" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should open matter details on click" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should add new matter" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle empty board state" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should work in mobile view" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should show matter details in card" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle real-time updates" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/matter-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Matter CRUD Operations › should create new matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should validate required fields" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should update existing matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should delete matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle duplicate case numbers" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should auto-save draft" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle status transitions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle permissions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should export matter data" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should show audit trail" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/mobile.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Experience › should show mobile navigation menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should navigate using mobile menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized kanban board" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should swipe between kanban columns" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle touch gestures on matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized forms" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle virtual keyboard properly" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly search" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle offline mode" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should optimize images for mobile" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle orientation changes" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-specific UI elements" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle pull-to-refresh" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/visual.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Chrome" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Visual Regression Tests › Authentication Pages › login page appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Authentication Pages › login page responsive design" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board layout" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board empty state" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board with multiple matters" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board mobile responsiveness" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter detail page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter create form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter edit form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › navigation sidebar" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › header and breadcrumbs" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Dark Mode Theme › dark mode appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › network error page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › 404 page not found" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility/accessibility-audit.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="27" failures="0" skipped="27" time="0" errors="0">
<testcase name="Accessibility Audit › Authentication Pages › login page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › 2FA setup page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Authentication Pages › password reset page should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › main dashboard should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › navigation should be keyboard accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Dashboard and Navigation › sidebar navigation should have proper ARIA labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › create case form should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › form validation should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Case Management Forms › complex form fields should have proper labels" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban board should be keyboard navigable" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › drag and drop should have keyboard alternatives" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Kanban Board Accessibility › kanban columns should have proper headings" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document list should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › file upload should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Document Management › document viewer should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › matter list table should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › sortable columns should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Data Tables and Lists › pagination should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › modal dialogs should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › dropdown menus should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Modals and Overlays › tooltips should be accessible" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should meet color contrast requirements" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should be usable without color alone" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Color Contrast and Visual Elements › should support high contrast mode" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper heading hierarchy" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should have proper landmark roles" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Audit › Screen Reader Support › should announce dynamic content changes" classname="accessibility/accessibility-audit.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/auth-flows.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Authentication Flows › Login Process › should login successfully with valid lawyer credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid clerk credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should login successfully with valid client credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should reject invalid credentials" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation errors for empty fields" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Process › should show validation error for invalid email format" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should logout successfully and redirect to login page" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Logout Process › should clear session and require re-authentication" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should maintain session across page refreshes" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle session timeout gracefully" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Session Management › should handle concurrent sessions correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce lawyer permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce clerk permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Role-Based Access Control › should enforce client permissions" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should enforce password complexity requirements" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Password Security › should require password confirmation match" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Mobile Authentication › should handle mobile login correctly" classname="auth/auth-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth/two-factor-auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should guide user through 2FA setup on first login" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should verify 2FA setup with valid code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should reject invalid verification codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Setup Flow › should allow downloading backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should require 2FA after username/password" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should login successfully with valid 2FA code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should reject invalid 2FA codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should handle 2FA code expiration" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Login Flow › should rate limit after multiple failed attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should allow login with backup code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should invalidate backup code after use" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Backup Code Authentication › should warn when few backup codes remain" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should allow disabling 2FA" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should regenerate backup codes" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › 2FA Management › should reset 2FA after password change" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should prevent 2FA bypass attempts" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should timeout 2FA session" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should enforce 2FA for sensitive operations" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › Security Scenarios › should lock account after repeated 2FA failures" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should show helpful setup instructions" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should provide accessibility for QR code" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Two-Factor Authentication › User Experience › should remember trusted devices" classname="auth/two-factor-auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="case-management/case-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Case Creation › should create a new case with complete information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should validate required fields when creating a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Creation › should handle API errors during case creation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should display case list with proper information" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should open case details when clicking on a case" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should filter cases by status" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Reading and Listing › should search cases by title and client" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case information successfully" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should update case status through workflow actions" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Updates › should handle optimistic updates with rollback on failure" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should delete case with confirmation" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Case Deletion › should cancel deletion when user chooses not to proceed" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple cases and update status in bulk" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should handle partial failures in bulk operations" classname="case-management/case-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cases/case-management-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="22" failures="0" skipped="22" time="0" errors="0">
<testcase name="Case Management CRUD Operations › Create Operations › should create a new matter successfully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should validate required fields on create" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Create Operations › should create matter with file upload" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should display matter list with proper data" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should open matter detail view" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should filter matters by status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Read Operations › should search matters by title" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter details" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should update matter status via dropdown" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should assign matter to different lawyer" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Update Operations › should add note to matter" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should delete matter with confirmation" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should cancel matter deletion" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Delete Operations › should prevent deletion of active matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should select multiple matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk update status" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Bulk Operations › should bulk assign matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle server errors gracefully" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should validate matter title length" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Data Validation and Error Handling › should handle duplicate matter titles" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › clerk should have limited access" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Case Management CRUD Operations › Permission-Based Access › client should only see assigned matters" classname="cases/case-management-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="forms/form-validation.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Form Validation › should validate matter creation form" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Form Validation › should validate email formats in user forms" classname="forms/form-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="kanban/kanban-workflow.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display all kanban columns with proper headers" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should display matter cards with complete information" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Board Layout › should show column counts and statistics" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should drag matter from INTAKE to IN_PROGRESS successfully" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag and drop with position reordering" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should validate status transition rules during drag" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Drag and Drop Operations › should handle drag cancellation with escape key" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should show drag indicators when another user is dragging" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Real-time Collaboration › should handle concurrent drag conflicts" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should handle large number of matters efficiently" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Performance and Responsive Design › should work correctly on mobile devices" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should filter matters by priority" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Kanban Filters and Search › should search matters across all columns" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should support keyboard navigation for drag and drop" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Workflow Operations › Accessibility › should have proper ARIA labels and roles" classname="kanban/kanban-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="mobile/mobile-responsive.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Responsive Design › should display mobile navigation correctly on iPhone" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle mobile form interactions" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support touch interactions on documents" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle responsive breakpoints" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support swipe gestures on kanban cards" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support long press for context menus" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should load quickly on mobile networks" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should provide smooth animations" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle orientation changes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile screen readers" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should have appropriate touch target sizes" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support offline document access" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile notifications" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should support mobile-optimized search" classname="mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance/web-vitals.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Core Web Vitals Performance › dashboard should meet Core Web Vitals thresholds" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › cases list should load performantly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › kanban board should render efficiently" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Core Web Vitals Performance › document viewer should load quickly" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should track resource loading performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure JavaScript bundle performance" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should monitor memory usage" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Monitoring › should measure API response times" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should maintain consistent performance across browser sessions" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Regression Testing › should perform well under load simulation" classname="performance/web-vitals.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="real-time/collaboration.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Real-time Collaboration › should show real-time updates when another user makes changes" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Real-time Collaboration › should handle WebSocket connection states" classname="real-time/collaboration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="responsive/mobile-tests.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Mobile Responsive Design › should adapt layout for mobile devices" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsive Design › should handle touch interactions on mobile" classname="responsive/mobile-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/auth.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Authentication Flow › should login successfully with valid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show error with invalid credentials" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should show validation errors for empty fields" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should logout successfully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should redirect to login when accessing protected route" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should persist login with remember me" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle session expiry gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should work with different user roles" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should handle network errors gracefully" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flow › should navigate to forgot password" classname="tests/auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/kanban.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Kanban Board › should display kanban board with columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should display matters in correct columns" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should drag matter to another column" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should prevent invalid status transitions" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should search for matters" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should clear search" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should filter by priority" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should open matter details on click" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should add new matter" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle empty board state" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should work in mobile view" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should show matter details in card" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Kanban Board › should handle real-time updates" classname="tests/kanban.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/matter-crud.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Matter CRUD Operations › should create new matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should validate required fields" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should update existing matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should delete matter" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle duplicate case numbers" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should auto-save draft" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle status transitions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should handle permissions" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should export matter data" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Matter CRUD Operations › should show audit trail" classname="tests/matter-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/mobile.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mobile Experience › should show mobile navigation menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should navigate using mobile menu" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized kanban board" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should swipe between kanban columns" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle touch gestures on matter cards" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-optimized forms" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle virtual keyboard properly" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-friendly search" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle offline mode" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should optimize images for mobile" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle orientation changes" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should show mobile-specific UI elements" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Experience › should handle pull-to-refresh" classname="tests/mobile.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="tests/visual.spec.ts" timestamp="2025-07-02T02:13:21.181Z" hostname="Mobile Safari" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Visual Regression Tests › Authentication Pages › login page appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Authentication Pages › login page responsive design" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board layout" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board empty state" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board with multiple matters" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Kanban Board › kanban board mobile responsiveness" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter detail page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter create form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Matter Pages › matter edit form" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › navigation sidebar" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Navigation and Layout › header and breadcrumbs" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Dark Mode Theme › dark mode appearance" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › network error page" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › Error States › 404 page not found" classname="tests/visual.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>