<template>
  <CaseCardInteractive
    :case-data="caseData"
    :view-mode="viewMode"
    :interactive="interactive"
    :show-quick-actions="showQuickActions"
    :is-loading="isLoading"
    @clicked="$emit('clicked', caseData)"
    @edit="$emit('edit', caseData)"
    @duplicate="$emit('duplicate', caseData)"
    @delete="$emit('delete', caseData)"
    @drag-start="$emit('dragStart', $event, caseData)"
    @drag-end="$emit('dragEnd', $event, caseData)"
  />
</template>

<script setup lang="ts">
import type { Case } from '~/types/case'

interface Props {
  caseData: Case
  viewMode?: 'minimal' | 'compact' | 'detailed'
  interactive?: boolean
  showQuickActions?: boolean
  isLoading?: boolean
}

interface Emits {
  (e: 'clicked', caseData: Case): void
  (e: 'edit', caseData: Case): void
  (e: 'duplicate', caseData: Case): void
  (e: 'delete', caseData: Case): void
  (e: 'dragStart', event: DragEvent, caseData: Case): void
  (e: 'dragEnd', event: DragEvent, caseData: Case): void
}

withDefaults(defineProps<Props>(), {
  viewMode: 'compact',
  interactive: true,
  showQuickActions: true,
  isLoading: false
})

defineEmits<Emits>()
</script>