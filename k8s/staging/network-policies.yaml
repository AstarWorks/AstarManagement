apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: aster-staging
  labels:
    environment: staging
    security: network-policy
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aster-backend-policy
  namespace: aster-staging
  labels:
    app: aster-backend
    environment: staging
    security: network-policy
spec:
  podSelector:
    matchLabels:
      app: aster-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from frontend
  - from:
    - podSelector:
        matchLabels:
          app: aster-frontend
    ports:
    - protocol: TCP
      port: 8080
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  # Allow monitoring scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow database access (Cloud SQL private IP)
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis access
  - to: []
    ports:
    - protocol: TCP
      port: 6379
  # Allow HTTP for health checks and internal services
  - to: []
    ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aster-frontend-policy
  namespace: aster-staging
  labels:
    app: aster-frontend
    environment: staging
    security: network-policy
spec:
  podSelector:
    matchLabels:
      app: aster-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  # Allow monitoring scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow communication with backend
  - to:
    - podSelector:
        matchLabels:
          app: aster-backend
    ports:
    - protocol: TCP
      port: 8080
  # Allow HTTPS for external resources (CDNs, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP for health checks
  - to: []
    ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-egress
  namespace: monitoring
  labels:
    environment: staging
    security: network-policy
    purpose: monitoring
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow scraping metrics from all namespaces
  - to: []
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9093
    - protocol: TCP
      port: 3000
  # Allow HTTPS for external services
  - to: []
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cert-manager
  namespace: cert-manager
  labels:
    environment: staging
    security: network-policy
    purpose: cert-manager
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS for ACME challenges and Google DNS API
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP for ACME challenges
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow Kubernetes API access
  - to: []
    ports:
    - protocol: TCP
      port: 6443