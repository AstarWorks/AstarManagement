{
  "openapi": "3.1.0",
  "info": {
    "title": "Astar Management API",
    "description": "API for Astar Management Platform",
    "contact": {
      "name": "Astar Works"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://local",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "My Workspaces",
      "description": "Multi-tenant workspace access endpoints"
    },
    {
      "name": "Tables",
      "description": "Manage tables in the flexible table system"
    },
    {
      "name": "Editor Documents",
      "description": "Document CRUD and revision endpoints for the editor module"
    },
    {
      "name": "Workspaces",
      "description": "Manage workspaces in the flexible table system"
    },
    {
      "name": "Editor Folders",
      "description": "Folder and hierarchy management for the document editor module"
    },
    {
      "name": "Records",
      "description": "Manage records in flexible table tables"
    },
    {
      "name": "Users",
      "description": "User management and profile operations"
    }
  ],
  "paths": {
    "/api/v1/workspaces/{id}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get workspace",
        "description": "Retrieves a specific workspace by ID",
        "operationId": "getWorkspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Include detailed information",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Update workspace",
        "description": "Updates an existing workspace",
        "operationId": "updateWorkspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Workspace updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Workspace name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Delete workspace",
        "description": "Permanently deletes a workspace and all its contents",
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "Force delete even if not empty",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workspace deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Workspace not found"
          },
          "409": {
            "description": "Workspace not empty or in use"
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user information",
        "description": "Retrieves the authenticated user\u0027s details including profile",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user information",
        "description": "Updates the authenticated user\u0027s information",
        "operationId": "updateCurrentUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "description": "Retrieves the authenticated user\u0027s profile information",
        "operationId": "getCurrentUserProfile",
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user profile",
        "description": "Updates or creates the authenticated user\u0027s profile information",
        "operationId": "updateCurrentUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "201": {
            "description": "Profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/{userId}/roles": {
      "get": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "getUserRoles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includePermissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "setUserRoles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleAssignmentResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "assignRoles",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleAssignmentResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{id}": {
      "get": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "getTenantById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "updateTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "deactivateTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}": {
      "get": {
        "tags": [
          "Tables"
        ],
        "summary": "Get table",
        "description": "Retrieves a specific table by ID",
        "operationId": "getTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeRecordCount",
            "in": "query",
            "description": "Include record count",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tables"
        ],
        "summary": "Update table",
        "description": "Updates an existing table",
        "operationId": "updateTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Table updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "409": {
            "description": "Table name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tables"
        ],
        "summary": "Delete table",
        "description": "Permanently deletes a table and all its records",
        "operationId": "deleteTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Table deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Table not found"
          },
          "409": {
            "description": "Table in use or deletion restricted"
          }
        }
      }
    },
    "/api/v1/tables/{id}/properties/{key}": {
      "put": {
        "tags": [
          "Tables"
        ],
        "summary": "Update property",
        "description": "Updates an existing property in a table",
        "operationId": "updateProperty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Property key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Property updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid property definition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table or property not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tables"
        ],
        "summary": "Remove property",
        "description": "Removes a property from a table",
        "operationId": "removeProperty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Property key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Property removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table or property not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/properties/reorder": {
      "put": {
        "tags": [
          "Tables"
        ],
        "summary": "Reorder properties",
        "description": "Changes the display order of properties in a table",
        "operationId": "reorderProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyReorderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Properties reordered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid property order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions": {
      "get": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "getPermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "syncPermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSyncResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "grantPermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGrantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGrantResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "revokePermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionBulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/roles/{id}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includePermissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeUserCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "role-controller"
        ],
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/roles/reorder": {
      "put": {
        "tags": [
          "role-controller"
        ],
        "operationId": "reorderRoles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleReorderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/records/{id}": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Get record",
        "description": "Retrieves a specific record by ID",
        "operationId": "getRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Records"
        ],
        "summary": "Update record",
        "description": "Updates an existing record",
        "operationId": "updateRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Records"
        ],
        "summary": "Delete record",
        "description": "Permanently deletes a record",
        "operationId": "deleteRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Record deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Record not found"
          }
        }
      }
    },
    "/api/v1/records/{id}/move": {
      "put": {
        "tags": [
          "Records"
        ],
        "summary": "Move record",
        "description": "Changes the position of a record",
        "operationId": "moveRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordMoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record moved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid move request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/reorder": {
      "put": {
        "tags": [
          "Records"
        ],
        "summary": "Reorder records",
        "description": "Sets a new order for multiple records",
        "operationId": "reorderRecords",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordReorderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Records reordered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid reorder request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/bulk-field-update": {
      "put": {
        "tags": [
          "Records"
        ],
        "summary": "Bulk update field",
        "description": "Updates a specific field across multiple records",
        "operationId": "bulkUpdateField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordBulkFieldUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Field updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or exceeds batch limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordBatchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordBatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordBatchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordBatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/batch": {
      "put": {
        "tags": [
          "Records"
        ],
        "summary": "Update records in batch",
        "description": "Updates multiple records in a single operation",
        "operationId": "updateRecordsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordBatchUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Records updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record data or batch size exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "404": {
            "description": "One or more records not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Create records in batch",
        "description": "Creates multiple records in a single operation",
        "operationId": "createRecordsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordBatchCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Records created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record data or batch size exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Records"
        ],
        "summary": "Delete records in batch",
        "description": "Deletes multiple records in a single operation",
        "operationId": "deleteRecordsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordBatchDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Records deleted successfully"
          },
          "400": {
            "description": "Invalid request or batch size exceeded"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/v1/editor/documents/{documentId}": {
      "get": {
        "tags": [
          "Editor Documents"
        ],
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseDocumentResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Editor Documents"
        ],
        "operationId": "updateDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseDocumentResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Editor Documents"
        ],
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseDocumentDeletionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "List workspaces",
        "description": "Retrieves all workspaces for the current tenant",
        "operationId": "listWorkspaces",
        "parameters": [
          {
            "name": "includeCounts",
            "in": "query",
            "description": "Include table counts",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Create workspace",
        "description": "Creates a new workspace for the current tenant",
        "operationId": "createWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Workspace created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Workspace name already exists or limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/default": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Create default workspace",
        "description": "Creates a default workspace for tenant onboarding",
        "operationId": "createDefaultWorkspace",
        "responses": {
          "201": {
            "description": "Default workspace created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Default workspace already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/sync-auth0": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Sync users with Auth0",
        "description": "Manually synchronizes user data with Auth0 (admin only)",
        "operationId": "syncWithAuth0",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/me/permissions/check-resource": {
      "post": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "checkMyResourceAccess",
        "parameters": [
          {
            "name": "resourceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants": {
      "get": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "getAllTenants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "createTenant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{id}/link-auth0": {
      "post": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "linkAuth0Organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "auth0OrgId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{id}/activate": {
      "post": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "activateTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Create table",
        "description": "Creates a new table in a workspace",
        "operationId": "createTable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Table created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "409": {
            "description": "Table name already exists or limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/properties": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Add property",
        "description": "Adds a new property to a table",
        "operationId": "addProperty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Property added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid property definition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "409": {
            "description": "Property key already exists or limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/import": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Import data",
        "description": "Imports data into an existing table",
        "operationId": "importData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableImportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Data imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableImportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid import data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableImportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableImportResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableImportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableImportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/duplicate": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Duplicate table",
        "description": "Creates a copy of an existing table",
        "operationId": "duplicateTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDuplicateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Table duplicated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "409": {
            "description": "Table name already exists or limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/from-template": {
      "post": {
        "tags": [
          "Tables"
        ],
        "summary": "Create table from template",
        "description": "Creates a new table using a predefined template",
        "operationId": "createTableFromTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Table created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid template or request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "409": {
            "description": "Table name already exists or limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getRoles",
        "parameters": [
          {
            "name": "includePermissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeUserCount",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-controller"
        ],
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreateRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/validate": {
      "post": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "validatePermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionGrantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/copy-from/{sourceRoleId}": {
      "post": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "copyPermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sourceRoleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionCopyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{id}/duplicate": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "operationId": "duplicateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDuplicateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/validate": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "operationId": "validateRoleCreation",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Create record",
        "description": "Creates a new record in a table",
        "operationId": "createRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid record data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/validate": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Validate record data",
        "description": "Validates record data against table schema without saving",
        "operationId": "validateRecordData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Validation result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordValidationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordValidationResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordValidationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/search": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Search records",
        "description": "Advanced search with complex filtering and sorting",
        "operationId": "searchRecords",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/filter": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Filter records",
        "description": "Searches and filters records based on criteria",
        "operationId": "filterRecords",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0.0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20.0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordFilterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully filtered records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid filter criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/copy": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Copy records",
        "description": "Copies one or more records within or across tables",
        "operationId": "copyRecords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordCopyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Records copied successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordCopyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or exceeds copy limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordCopyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordCopyResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordCopyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record or table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordCopyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders": {
      "get": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "listNodes",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parentId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderChildrenResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "createFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/documents": {
      "post": {
        "tags": [
          "Editor Documents"
        ],
        "operationId": "createDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/setup": {
      "post": {
        "tags": [
          "auth-setup-controller"
        ],
        "operationId": "completeSetup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/setup/create-default-workspace": {
      "post": {
        "tags": [
          "auth-setup-controller"
        ],
        "operationId": "createDefaultWorkspace_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleSetupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders/{folderId}/rename": {
      "patch": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "renameFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderRenameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders/{folderId}/move": {
      "patch": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "moveFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderMoveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders/{folderId}/archive": {
      "patch": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "archiveFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderArchiveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{id}/statistics": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get workspace statistics",
        "description": "Retrieves detailed statistics for a workspace",
        "operationId": "getWorkspaceStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Workspace ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceStatistics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceStatistics"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/quota": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get workspace quota",
        "description": "Retrieves workspace quota information for the tenant",
        "operationId": "getWorkspaceQuota",
        "responses": {
          "200": {
            "description": "Successfully retrieved quota",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users in tenant",
        "description": "Retrieves all users in the current tenant (admin only)",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieves a specific user\u0027s information",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{userId}/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "description": "Retrieves a specific user\u0027s profile information",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/{userId}/permissions": {
      "get": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "getUserPermissions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/me/roles": {
      "get": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "getMyRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/me/permissions": {
      "get": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "getMyPermissions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/me/permissions/check": {
      "get": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "checkMyPermission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/slug/{slug}": {
      "get": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "getTenantBySlug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/current": {
      "get": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "getCurrentTenant",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/active": {
      "get": {
        "tags": [
          "tenant-controller"
        ],
        "operationId": "getActiveTenants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/statistics": {
      "get": {
        "tags": [
          "Tables"
        ],
        "summary": "Get table statistics",
        "description": "Retrieves statistical information about a table",
        "operationId": "getTableStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableStatisticsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableStatisticsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableStatisticsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableStatisticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/schema": {
      "get": {
        "tags": [
          "Tables"
        ],
        "summary": "Get table schema",
        "description": "Retrieves the schema definition of a table",
        "operationId": "getTableSchema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableSchemaResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableSchemaResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableSchemaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableSchemaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/{id}/export": {
      "get": {
        "tags": [
          "Tables"
        ],
        "summary": "Export table",
        "description": "Exports a table\u0027s schema and optionally its data",
        "operationId": "exportTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Export format (json, csv)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json"
            }
          },
          {
            "name": "includeRecords",
            "in": "query",
            "description": "Include records in export",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Table exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableExportResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableExportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableExportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tables/workspace/{workspaceId}": {
      "get": {
        "tags": [
          "Tables"
        ],
        "summary": "List tables in workspace",
        "description": "Retrieves all tables in a specific workspace",
        "operationId": "listTables",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeRecordCounts",
            "in": "query",
            "description": "Include record counts",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tables",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/suggestions": {
      "get": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "getPermissionSuggestions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/effective": {
      "get": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "getEffectivePermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectivePermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/compare": {
      "get": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "comparePermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "with",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermissionDiff"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/check": {
      "get": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "checkPermission",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permission",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{id}/export": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "exportRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/search": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "searchRoles",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includePermissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/by-permission": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "operationId": "getRolesByPermission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "List records",
        "description": "Retrieves records from a table with pagination",
        "operationId": "listRecords",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0.0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20.0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/paged": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Get paginated records",
        "description": "Retrieves records with advanced pagination support",
        "operationId": "getRecordsPaged",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0.0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20.0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction (ASC/DESC)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid pagination parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseRecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/count": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Count records",
        "description": "Gets the total number of records in a table",
        "operationId": "countRecords",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Table not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/my-workspaces": {
      "get": {
        "tags": [
          "My Workspaces"
        ],
        "summary": "List my workspaces",
        "description": "Gets all workspaces/tenants accessible to the authenticated user",
        "operationId": "getMyWorkspaces",
        "responses": {
          "200": {
            "description": "Successfully retrieved accessible workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - setup mode users cannot access workspaces",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/my-tenants": {
      "get": {
        "tags": [
          "My Workspaces"
        ],
        "summary": "List my tenants",
        "description": "Legacy endpoint - use /my-workspaces instead",
        "operationId": "getMyTenants",
        "responses": {
          "200": {
            "description": "Successfully retrieved accessible tenants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyWorkspacesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders/{nodeId}/breadcrumb": {
      "get": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "getBreadcrumb",
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderBreadcrumbResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/folders/{folderId}/children": {
      "get": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "listFolderChildren",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseFolderChildrenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/editor/documents/{documentId}/revisions": {
      "get": {
        "tags": [
          "Editor Documents"
        ],
        "operationId": "listRevisions",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseDocumentRevisionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/viewer-only": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "viewerOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/user-only": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "userOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/public": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "publicEndpoint",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/table-view": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "tableView",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/table-delete": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "tableDelete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/settings-manage": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "settingsManage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/document-view-team": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "documentViewTeam",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/document-edit-own": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "documentEditOwn",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/permission/any-view": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "anyView",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiPermissionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/hybrid/table-create": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "tableCreateHybrid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridAuthTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/authenticated": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "authenticatedEndpoint",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/admin-or-user": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "adminOrUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/test/admin-only": {
      "get": {
        "tags": [
          "authorization-test-controller"
        ],
        "operationId": "adminOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/setup/my-tenants": {
      "get": {
        "tags": [
          "auth-setup-controller"
        ],
        "operationId": "getMyTenants_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyTenantsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getCurrentUser_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/claims": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getJwtClaims",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtClaimsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/business-context": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getBusinessContext",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-roles/{userId}/roles/{roleId}": {
      "delete": {
        "tags": [
          "user-role-controller"
        ],
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/{permission}": {
      "delete": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "revokePermission",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/roles/{roleId}/permissions/all": {
      "delete": {
        "tags": [
          "role-permission-controller"
        ],
        "operationId": "revokeAllPermissions",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/records/table/{tableId}/clear": {
      "delete": {
        "tags": [
          "Records"
        ],
        "summary": "Clear table",
        "description": "Removes all records from a table",
        "operationId": "clearTable",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "description": "Table ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "confirm",
            "in": "query",
            "description": "Confirmation flag",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Table cleared successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Table not found"
          }
        }
      }
    },
    "/api/v1/editor/folders/{folderId}": {
      "delete": {
        "tags": [
          "Editor Folders"
        ],
        "operationId": "deleteFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorApiResponseUnit"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonElement": {},
      "JsonObject": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/JsonElement"
        },
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonElement"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/JsonElement"
                },
                "key": {
                  "type": "string"
                }
              }
            },
            "uniqueItems": true
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "WorkspaceUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "description": {
            "type": "string",
            "maxLength": 1000.0,
            "minLength": 0.0
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          }
        }
      },
      "WorkspaceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "tableCount": {
            "type": "integer",
            "format": "int32"
          },
          "recordCount": {
            "type": "integer",
            "format": "int64"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1.0
          }
        },
        "required": [
          "email"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "auth0Sub": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserProfileUpdateRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 0.0
          },
          "avatarUrl": {
            "type": "string",
            "maxLength": 500.0,
            "minLength": 0.0
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserRoleAssignmentRequest": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "FailedRoleAssignment": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "UserRoleAssignmentResult": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "assignedRoles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "failedRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FailedRoleAssignment"
            }
          },
          "totalAssigned": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateTenantRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          }
        },
        "required": [
          "name"
        ]
      },
      "TenantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "auth0OrgId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "TableUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "description": {
            "type": "string",
            "maxLength": 1000.0,
            "minLength": 0.0
          },
          "propertyOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          }
        }
      },
      "PropertyDefinitionDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 50.0,
            "minLength": 1.0
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "long_text",
              "number",
              "checkbox",
              "date",
              "datetime",
              "select",
              "multi_select",
              "email",
              "url",
              "file",
              "relation"
            ]
          },
          "displayName": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "required": {
            "type": "boolean"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "key",
          "type"
        ]
      },
      "TableResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyDefinitionDto"
            }
          },
          "propertyOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recordCount": {
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "orderedProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyDefinitionDto"
            }
          }
        }
      },
      "PropertyUpdateRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "required": {
            "type": "boolean"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PropertyReorderRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2.147483647E9,
            "minItems": 1.0
          }
        },
        "required": [
          "order"
        ]
      },
      "GeneralRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PermissionRule"
          }
        ]
      },
      "PermissionRule": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "TABLE",
              "RECORD",
              "DOCUMENT",
              "DIRECTORY",
              "WORKSPACE",
              "TENANT",
              "USER",
              "ROLE",
              "PROPERTY_TYPE",
              "RESOURCE_GROUP",
              "SETTINGS"
            ]
          },
          "action": {
            "type": "string",
            "enum": [
              "VIEW",
              "CREATE",
              "EDIT",
              "DELETE",
              "MANAGE",
              "EXPORT",
              "IMPORT"
            ]
          },
          "scope": {
            "type": "string",
            "enum": [
              "ALL",
              "TEAM",
              "OWN",
              "RESOURCE_GROUP",
              "RESOURCE_ID"
            ]
          }
        }
      },
      "PermissionSyncRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "ResourceGroupRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PermissionRule"
          },
          {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "ResourceIdRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PermissionRule"
          },
          {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "PermissionSyncResult": {
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "removed": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "unchanged": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "RoleUpdateRequest": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "system": {
            "type": "boolean"
          }
        }
      },
      "RolePositionUpdate": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoleReorderRequest": {
        "type": "object",
        "properties": {
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePositionUpdate"
            }
          }
        }
      },
      "RecordUpdateRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "merge": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "RecordResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "position": {
            "type": "number",
            "format": "float"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "primaryFieldValue": {
            "$ref": "#/components/schemas/JsonElement"
          }
        }
      },
      "RecordMoveRequest": {
        "type": "object",
        "properties": {
          "afterRecordId": {
            "type": "string",
            "format": "uuid"
          },
          "beforeRecordId": {
            "type": "string",
            "format": "uuid"
          },
          "movingToFirst": {
            "type": "boolean"
          },
          "movingToLast": {
            "type": "boolean"
          }
        }
      },
      "RecordReorderRequest": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "recordIds"
        ]
      },
      "RecordListResponse": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "tableId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RecordBulkFieldUpdateRequest": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "maxItems": 1000.0,
            "minItems": 1.0
          },
          "field": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "clearingField": {
            "type": "boolean"
          }
        },
        "required": [
          "field",
          "recordIds"
        ]
      },
      "RecordBatchError": {
        "type": "object",
        "properties": {
          "recordId": {
            "type": "string",
            "format": "uuid"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "error": {
            "type": "string"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordValidationError"
            }
          }
        }
      },
      "RecordBatchResponse": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordResponse"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordBatchError"
            }
          },
          "totalProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "format": "int32"
          },
          "failureCount": {
            "type": "integer",
            "format": "int32"
          },
          "completeSuccess": {
            "type": "boolean"
          },
          "completeFailure": {
            "type": "boolean"
          },
          "partialSuccess": {
            "type": "boolean"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RecordValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "value": {}
        }
      },
      "RecordBatchUpdateRequest": {
        "type": "object",
        "properties": {
          "updates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonObject"
            }
          },
          "merge": {
            "type": "boolean"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "recordIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true
          }
        },
        "required": [
          "updates"
        ]
      },
      "DocumentUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "summary": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "published": {
            "type": "boolean"
          },
          "favorited": {
            "type": "boolean"
          }
        }
      },
      "DocumentMetadataResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastViewedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastIndexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "published": {
            "type": "boolean"
          },
          "favorited": {
            "type": "boolean"
          }
        }
      },
      "DocumentResponse": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/EditorNodeResponse"
          },
          "latestRevision": {
            "$ref": "#/components/schemas/DocumentRevisionResponse"
          },
          "metadata": {
            "$ref": "#/components/schemas/DocumentMetadataResponse"
          },
          "revisionCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DocumentRevisionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "titleSnapshot": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64"
          },
          "checksum": {
            "type": "string"
          },
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EditorApiResponseDocumentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EditorErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "EditorNodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "materializedPath": {
            "type": "string"
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "number",
            "format": "double"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "WorkspaceCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "description": {
            "type": "string",
            "maxLength": 1000.0,
            "minLength": 0.0
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "validName": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateTenantRequest": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "maxLength": 100.0,
            "minLength": 3.0,
            "pattern": "^[a-z0-9-]+$"
          },
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "auth0OrgId": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 0.0
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "TableCreateRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "description": {
            "type": "string",
            "maxLength": 1000.0,
            "minLength": 0.0
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyDefinitionDto"
            }
          },
          "templateName": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "propertiesMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyDefinitionDto"
            }
          }
        },
        "required": [
          "name",
          "workspaceId"
        ]
      },
      "PropertyAddRequest": {
        "type": "object",
        "properties": {
          "definition": {
            "$ref": "#/components/schemas/PropertyDefinitionDto"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "definition"
        ]
      },
      "TableImportRequest": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonObject"
            }
          },
          "csvData": {
            "type": "string"
          },
          "skipHeader": {
            "type": "boolean"
          },
          "fieldMapping": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "updateExisting": {
            "type": "boolean"
          },
          "upsertKey": {
            "type": "string"
          },
          "upsert": {
            "type": "boolean"
          }
        },
        "required": [
          "format"
        ]
      },
      "ImportError": {
        "type": "object",
        "properties": {
          "row": {
            "type": "integer",
            "format": "int32"
          },
          "field": {
            "type": "string"
          },
          "value": {},
          "message": {
            "type": "string"
          },
          "recordData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          }
        }
      },
      "TableImportResponse": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "tableName": {
            "type": "string"
          },
          "importedCount": {
            "type": "integer",
            "format": "int64"
          },
          "updatedCount": {
            "type": "integer",
            "format": "int64"
          },
          "failedCount": {
            "type": "integer",
            "format": "int64"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            }
          },
          "importedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TableDuplicateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1.0
          },
          "includeRecords": {
            "type": "boolean"
          },
          "targetWorkspaceId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleCreateRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "PermissionGrantRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "FailedPermissionGrant": {
        "type": "object",
        "properties": {
          "permission": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GeneralRule"
              },
              {
                "$ref": "#/components/schemas/ResourceGroupRule"
              },
              {
                "$ref": "#/components/schemas/ResourceIdRule"
              }
            ]
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "PermissionGrantResult": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "granted": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FailedPermissionGrant"
            }
          },
          "totalGranted": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvalidPermission": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "PermissionValidationResult": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "invalid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvalidPermission"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionWarning"
            }
          }
        }
      },
      "PermissionWarning": {
        "type": "object",
        "properties": {
          "rule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GeneralRule"
              },
              {
                "$ref": "#/components/schemas/ResourceGroupRule"
              },
              {
                "$ref": "#/components/schemas/ResourceIdRule"
              }
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PermissionCopyRequest": {
        "type": "object",
        "properties": {
          "overwrite": {
            "type": "boolean"
          }
        }
      },
      "RoleDuplicateRequest": {
        "type": "object",
        "properties": {
          "newName": {
            "type": "string"
          },
          "includePermissions": {
            "type": "boolean"
          }
        }
      },
      "RecordCreateRequest": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "position": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "data",
          "tableId"
        ]
      },
      "RecordValidateRequest": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "data": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "recordId": {
            "type": "string",
            "format": "uuid"
          },
          "partial": {
            "type": "boolean"
          },
          "partialValidation": {
            "type": "boolean"
          },
          "fullValidation": {
            "type": "boolean"
          }
        },
        "required": [
          "data",
          "tableId"
        ]
      },
      "RecordValidationResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordValidationError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordValidationWarning"
            }
          },
          "processedData": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          }
        }
      },
      "RecordValidationWarning": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "suggestedValue": {
            "$ref": "#/components/schemas/JsonElement"
          }
        }
      },
      "RecordSearchFilter": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "eq",
              "neq",
              "gt",
              "gte",
              "lt",
              "lte",
              "between",
              "in",
              "not_in",
              "contains",
              "starts_with",
              "ends_with",
              "is_null",
              "is_not_null"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "$ref": "#/components/schemas/JsonElement"
              },
              "last": {
                "$ref": "#/components/schemas/JsonElement"
              }
            }
          },
          "textFilter": {
            "type": "boolean"
          },
          "rangeFilter": {
            "type": "boolean"
          }
        }
      },
      "RecordSearchRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordSearchFilter"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordSortRequest"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0
          },
          "includeArchived": {
            "type": "boolean"
          }
        }
      },
      "RecordSortRequest": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "RecordFilterRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "sort": {
            "$ref": "#/components/schemas/RecordSortRequest"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "PageResponseRecordResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordResponse"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecordCopyRequest": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "maxItems": 100.0,
            "minItems": 1.0
          },
          "targetTableId": {
            "type": "string",
            "format": "uuid"
          },
          "includeData": {
            "type": "boolean"
          },
          "fieldMapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "crossTableCopy": {
            "type": "boolean"
          }
        },
        "required": [
          "recordIds"
        ]
      },
      "RecordCopyResponse": {
        "type": "object",
        "properties": {
          "originalIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "copiedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordResponse"
            }
          },
          "mapping": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uuid"
            }
          },
          "copyCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecordBatchCreateRequest": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonObject"
            },
            "maxItems": 1000.0,
            "minItems": 1.0
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "withinSizeLimit": {
            "type": "boolean"
          }
        },
        "required": [
          "records",
          "tableId"
        ]
      },
      "FolderCreateRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 0.0
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "title"
        ]
      },
      "EditorApiResponseFolderResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FolderResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FolderResponse": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/EditorNodeResponse"
          }
        }
      },
      "DocumentCreateRequest": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 1.0
          },
          "summary": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonElement"
            },
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/JsonElement"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "uniqueItems": true
              },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": "number",
            "format": "double"
          },
          "published": {
            "type": "boolean"
          },
          "favorited": {
            "type": "boolean"
          }
        },
        "required": [
          "title"
        ]
      },
      "SetupRequest": {
        "type": "object",
        "properties": {
          "tenantName": {
            "type": "string"
          },
          "tenantType": {
            "type": "string",
            "enum": [
              "PERSONAL",
              "TEAM",
              "ENTERPRISE"
            ]
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfileDto"
          }
        }
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      },
      "SetupResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantUserId": {
            "type": "string",
            "format": "uuid"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "TenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PERSONAL",
              "TEAM",
              "ENTERPRISE"
            ]
          },
          "orgId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "auth0Sub": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "SimpleSetupResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantName": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "FolderRenameRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255.0,
            "minLength": 0.0
          }
        },
        "required": [
          "title"
        ]
      },
      "FolderMoveRequest": {
        "type": "object",
        "properties": {
          "targetParentId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "FolderArchiveRequest": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          }
        }
      },
      "WorkspaceListResponse": {
        "type": "object",
        "properties": {
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "hasMore": {
            "type": "boolean"
          }
        }
      },
      "WorkspaceStatistics": {
        "type": "object",
        "properties": {
          "totalTables": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int64"
          },
          "totalUsers": {
            "type": "integer",
            "format": "int32"
          },
          "storageUsed": {
            "type": "integer",
            "format": "int64"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserSearchResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "hasMore": {
            "type": "boolean"
          }
        }
      },
      "UserDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "auth0Sub": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfileResponse"
          },
          "tenantCount": {
            "type": "integer",
            "format": "int32"
          },
          "roleCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDetailResponse"
          },
          "currentTenantId": {
            "type": "string",
            "format": "uuid"
          },
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "RolePermissions": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "UserPermissionsResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantUserId": {
            "type": "string",
            "format": "uuid"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "effectivePermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          },
          "permissionsByRole": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermissions"
            }
          }
        }
      },
      "FieldStatistics": {
        "type": "object",
        "properties": {
          "fieldKey": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "nonNullCount": {
            "type": "integer",
            "format": "int64"
          },
          "nullCount": {
            "type": "integer",
            "format": "int64"
          },
          "fillRate": {
            "type": "number",
            "format": "double"
          },
          "uniqueCount": {
            "type": "integer",
            "format": "int64"
          },
          "minValue": {},
          "maxValue": {},
          "avgValue": {
            "type": "number",
            "format": "double"
          },
          "mostFrequent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrequencyItem"
            }
          }
        }
      },
      "FrequencyItem": {
        "type": "object",
        "properties": {
          "value": {},
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TableStatisticsResponse": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "tableName": {
            "type": "string"
          },
          "recordCount": {
            "type": "integer",
            "format": "int64"
          },
          "propertyCount": {
            "type": "integer",
            "format": "int32"
          },
          "fieldStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldStatistics"
            }
          },
          "storageSize": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastRecordCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastRecordUpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TableSchemaResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PropertyDefinitionDto"
            }
          },
          "propertyOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string"
          },
          "exportedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TableExportResponse": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "format": "uuid"
          },
          "tableName": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "schema": {
            "$ref": "#/components/schemas/TableSchemaResponse"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonObject"
            }
          },
          "data": {
            "type": "string"
          },
          "recordCount": {
            "type": "integer",
            "format": "int64"
          },
          "exportedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TableListResponse": {
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EffectivePermissionsResponse": {
        "type": "object",
        "properties": {
          "directPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "effectivePermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "RolePermissionDiff": {
        "type": "object",
        "properties": {
          "onlyInFirst": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          },
          "onlyInSecond": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          },
          "common": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            },
            "uniqueItems": true
          }
        }
      },
      "PermissionCheckResult": {
        "type": "object",
        "properties": {
          "rule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GeneralRule"
              },
              {
                "$ref": "#/components/schemas/ResourceGroupRule"
              },
              {
                "$ref": "#/components/schemas/ResourceIdRule"
              }
            ]
          },
          "hasPermission": {
            "type": "boolean"
          },
          "matchedBy": {
            "type": "string"
          }
        }
      },
      "MyWorkspacesResponse": {
        "type": "object",
        "properties": {
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "activeCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WorkspaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "lastAccessedAt": {
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "EditorApiResponseFolderChildrenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FolderChildrenResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FolderChildrenResponse": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditorNodeResponse"
            }
          }
        }
      },
      "EditorApiResponseFolderBreadcrumbResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FolderBreadcrumbResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EditorBreadcrumbItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "materializedPath": {
            "type": "string"
          }
        }
      },
      "FolderBreadcrumbResponse": {
        "type": "object",
        "properties": {
          "breadcrumb": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditorBreadcrumbItemResponse"
            }
          }
        }
      },
      "DocumentRevisionSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "titleSnapshot": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64"
          },
          "checksum": {
            "type": "string"
          },
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DocumentRevisionsResponse": {
        "type": "object",
        "properties": {
          "revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentRevisionSummaryResponse"
            }
          }
        }
      },
      "EditorApiResponseDocumentRevisionsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentRevisionsResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "userId": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "PublicTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "PermissionTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "requiredPermission": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GeneralRule"
              },
              {
                "$ref": "#/components/schemas/ResourceGroupRule"
              },
              {
                "$ref": "#/components/schemas/ResourceIdRule"
              }
            ]
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "hasRequiredPermission": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "MultiPermissionTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "requiredPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "matchedPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "hasAnyRequiredPermission": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "HybridAuthTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "authMethod": {
            "type": "string"
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "userId": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "AuthenticatedTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            }
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          },
          "userId": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND"
            ]
          }
        }
      },
      "MyTenantsResponse": {
        "type": "object",
        "properties": {
          "tenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenantDto"
            }
          },
          "defaultTenantId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserTenantDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantName": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "joinedAt": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "JwtClaimsResponse": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "aud": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iss": {
            "type": "string"
          },
          "iat": {
            "type": "string",
            "format": "date-time"
          },
          "exp": {
            "type": "string",
            "format": "date-time"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "AuthenticatedContextDto": {
        "type": "object",
        "properties": {
          "auth0Sub": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantUserId": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "BusinessContextResponse": {
        "type": "object",
        "properties": {
          "authenticatedContext": {
            "$ref": "#/components/schemas/AuthenticatedContextDto"
          },
          "springSecurityAuthorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rawJwtClaims": {
            "$ref": "#/components/schemas/RawJwtClaimsDto"
          }
        }
      },
      "RawJwtClaimsDto": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "customTenantId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionBulkDeleteRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GeneralRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceGroupRule"
                },
                {
                  "$ref": "#/components/schemas/ResourceIdRule"
                }
              ]
            }
          }
        }
      },
      "RecordBatchDeleteRequest": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "maxItems": 1000.0,
            "minItems": 1.0
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "recordIds"
        ]
      },
      "EditorApiResponseUnit": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DocumentDeletionResponse": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "EditorApiResponseDocumentDeletionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/DocumentDeletionResponse"
          },
          "error": {
            "$ref": "#/components/schemas/EditorErrorResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}