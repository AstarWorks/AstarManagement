
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/auth/infrastructure/security/CustomAuthorizationManager.kt:48:13 Condition is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/auth/infrastructure/security/CustomMethodSecurityExpressionRoot.kt:69:33 Condition is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/controller/RecordController.kt:622:27 Condition is always 'true'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/controller/TableController.kt:659:21 Check for instance is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/controller/TableController.kt:661:21 Check for instance is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/controller/TableController.kt:703:21 Check for instance is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/dto/property/PropertyDto.kt:58:13 'when' is exhaustive so 'else' is redundant here.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/api/dto/property/PropertyDto.kt:168:13 'when' is exhaustive so 'else' is redundant here.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/domain/service/PropertyTypeCatalogService.kt:244:17 Check for instance is always 'false'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/domain/service/PropertyTypeCatalogService.kt:268:13 Duplicate branch condition in 'when'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/infrastructure/persistence/repository/RecordRepositoryImpl.kt:29:34 Condition is always 'true'.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/core/table/infrastructure/persistence/repository/TableRepositoryImpl.kt:24:1 Names 'entity' and 'table' of parameter #0 conflict in the following members of supertypes: 'fun save(entity: Table): Table' defined in 'com/astarworks/astarmanagement/core/table/infrastructure/persistence/repository/TableRepositoryImpl', 'fun save(table: Table): Table' defined in 'com/astarworks/astarmanagement/core/table/domain/repository/TableRepository'. This may cause problems when calling this function with named arguments.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/infrastructure/context/BusinessContext.kt:3:8 'enum class Role : Enum<Role>' is deprecated. MVP期の仮実装。DynamicRoleへ移行してください.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/infrastructure/context/BusinessContext.kt:13:20 'enum class Role : Enum<Role>' is deprecated. MVP期の仮実装。DynamicRoleへ移行してください.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/infrastructure/handler/CustomAuthenticationEntryPoint.kt:21:5 This annotation is currently applied to the value parameter only, but in the future it will also be applied to field.
- To opt in to applying to both value parameter and field, add '-Xannotation-default-target=param-property' to your compiler arguments.
- To keep applying to the value parameter only, use the '@param:' annotation target.

See https://youtrack.jetbrains.com/issue/KT-73255 for more details.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/infrastructure/web/TenantContextFilter.kt:37:17 This property hides Java field 'field logger: Log' thus making it inaccessible.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/testing/MockAuthService.kt:33:5 This annotation is currently applied to the value parameter only, but in the future it will also be applied to field.
- To opt in to applying to both value parameter and field, add '-Xannotation-default-target=param-property' to your compiler arguments.
- To keep applying to the value parameter only, use the '@param:' annotation target.

See https://youtrack.jetbrains.com/issue/KT-73255 for more details.
w: file:///IdeaProjects/AstarManagement/backend/src/main/kotlin/com/astarworks/astarmanagement/shared/testing/MockAuthService.kt:34:5 This annotation is currently applied to the value parameter only, but in the future it will also be applied to field.
- To opt in to applying to both value parameter and field, add '-Xannotation-default-target=param-property' to your compiler arguments.
- To keep applying to the value parameter only, use the '@param:' annotation target